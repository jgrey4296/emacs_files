;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(load "~/.emacs.setup/lisp/my-emacs.el")
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-auto-show-menu 0.4)
 '(ac-auto-start t)
 '(blink-cursor-blinks 0)
 '(cursor-in-non-selected-windows (quote box))
 '(cursor-type (quote box))
 '(dired-use-ls-dired nil)
 '(display-buffer-alist (quote (("*shell*" display-buffer-same-window (nil)))))
 '(erlang-shell-prompt-read-only t)
 '(flycheck-disabled-checkers (quote (emacs-lisp-checkdoc javascript-eslint)))
 '(flycheck-javascript-standard-executable "jshint")
 '(flycheck-jshintrc ".jshintrc")
 '(flycheck-python-pylint-executable "pylint")
 '(global-hl-line-mode t)
 '(global-hl-line-sticky-flag nil)
 '(global-rainbow-blocks-mode t)
 '(haskell-program-name
   "ghci -XFlexibleContexts -XGeneralizedNewtypeDeriving -XScopedTypeVariables ")
 '(hl-line-sticky-flag nil)
 '(icicle-Completions-text-scale-decrease 0)
 '(js-switch-indent-offset 4)
 '(js2-highlight-level 3)
 '(js3-highlight-level 3)
 '(js3-strict-missing-semi-warning t)
 '(magit-log-remove-graph-args (quote ("#--follow" "#--grep" "#-G" "#-S" "#-L")))
 '(markdown-command "markdown_py-2.7")
 '(org-adapt-indentation t)
 '(org-agenda-files
   (quote
    ("~/github/writing/TODO.org" "~/github/writing/main.org")))
 '(org-agenda-show-inherited-tags (quote always))
 '(org-agenda-tags-column -40)
 '(org-babel-load-languages (quote ((js . t) (python . t) (haskell . t) (lisp . t))))
 '(org-confirm-babel-evaluate nil)
 '(org-indent-indentation-per-level 4)
 '(org-tags-column 80)
 '(org-use-fast-tag-selection t)
 '(package-selected-packages
   (quote
    (flycheck pylint dired-sidebar dired-rainbow dired-filter dired-du ob-prolog bison-mode lex ivy-erlang-complete edts auto-complete-distel ediprolog dired-quick-sort toml-mode rust-playground flycheck-rtags flycheck-rust cargo smooth-scroll parsec strie trie shader-mode glsl-mode haskell-mode ghc flymake-hlint yaml-mode haskell-emacs csharp-mode clean-buffers clean-aindent-mode company-ngram company-statistics company-c-headers company-bibtex company-anaconda column-marker fill-column-indicator crosshairs col-highlight auto-complete wiki-summary markdown-mode+ markdown-mode jsx-mode django-snippets haskell-snippets ctags auto-complete-exuberant-ctags writegood-mode smooth-scrolling sclang-snippets rainbow-mode rainbow-delimiters rainbow-blocks python-django popup-kill-ring pony-mode osc org-bookmark-heading org-agenda-property org-ac org multi-web-mode multi-term mmm-mode magit-filenotify lua-mode lorem-ipsum kooten-theme json-mode js3-mode js-doc jedi folding flyparens flymake-rust flymake-json flymake-jshint flymake-go flycheck-haskell evil etags-table etags-select darcula-theme danneskjold-theme context-coloring color-theme code-library cmake-project browse-kill-ring blackboard-theme atom-dark-theme apples-mode afternoon-theme ac-etags abyss-theme)))
 '(py-pylint-command-args (quote ("")))
 '(python-indent-guess-indent-offset nil)
 '(python-indent-offset 4)
 '(sclang-auto-scroll-post-buffer t)
 '(sclang-eval-line-forward nil)
 '(sclang-help-path (quote ("/Applications/SuperCollider/Help")))
 '(sclang-library-configuration-file "~/.emacs.setup/setup_files/sclang.yaml")
 '(sclang-program "sclang")
 '(sclang-runtime-directory "~/.sclang/")
 '(sclang-udp-port 57120)
 '(visible-cursor t)
 '(yas-global-mode t)
 '(yas-snippet-dirs
   (quote
    ("/Users/jgrey/github/jg_emacs_files/snippets/" "/Users/jgrey/github/otherLibs/yasnippet-snippets" "/Users/jgrey/.emacs.d/elpa/sclang-snippets-20130513.51/snippets" "/Users/jgrey/.emacs.d/snippets"))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(bold ((t (:foreground "purple" :weight bold))))
 '(context-coloring-level-0-face ((t (:foreground "white"))))
 '(context-coloring-level-1-face ((t (:foreground "white"))))
 '(cursor ((t (:background "red"))))
 '(custom-variable-tag ((t (:foreground "cyan" :weight bold))))
 '(diff-added ((t (:inherit diff-changed :background "green" :foreground "black"))))
 '(diff-file-header ((t (:foreground "white" :weight bold))))
 '(diff-header ((t (:background "color-24" :foreground "black"))))
 '(diff-indicator-removed ((t (:inherit diff-removed :foreground "black"))))
 '(diff-removed ((t (:inherit diff-changed :background "red" :foreground "black"))))
 '(ediff-odd-diff-B ((t (:background "red"))))
 '(flycheck-error-list-highlight ((t (:inherit highlight :foreground "black"))))
 '(flyspell-incorrect ((t (:inherit error))))
 '(font-lock-comment-delimiter-face ((t (:background "red"))))
 '(font-lock-comment-face ((t (:foreground "#AA0223"))))
 '(font-lock-function-name-face ((t (:foreground "color-28"))))
 '(header-line ((t (:inherit mode-line :foreground "blue" :inverse-video nil :underline t))))
 '(hl-line ((t (:background "white" :foreground "black"))))
 '(magit-diff-added ((t (:background "green" :foreground "black"))))
 '(magit-diff-added-highlight ((t (:background "green" :foreground "black"))))
 '(magit-diff-base ((t (:background "color-17" :foreground "#aaaa11"))))
 '(magit-diff-base-highlight ((t (:background "color-17" :foreground "#aaaa11"))))
 '(magit-diff-conflict-heading ((t (:inherit magit-diff-hunk-heading :background "color-17"))))
 '(magit-diff-context-highlight ((t (:background "color-17" :foreground "cyan"))))
 '(magit-diff-file-heading-highlight ((t (:inherit (magit-diff-file-heading magit-section-highlight) :foreground "black"))))
 '(magit-diff-file-heading-selection ((t (:inherit magit-diff-file-heading-highlight :background "color-17" :foreground "salmon4"))))
 '(magit-diff-hunk-heading ((t (:background "color-53" :foreground "white"))))
 '(magit-diff-hunk-heading-highlight ((t (:background "color-53" :foreground "white"))))
 '(magit-diff-hunk-heading-selection ((t (:inherit magit-diff-hunk-heading-highlight :foreground "white"))))
 '(magit-diff-lines-heading ((t (:inherit magit-diff-hunk-heading-highlight :background "LightSalmon3" :foreground "black"))))
 '(magit-diff-our ((t (:inherit magit-diff-removed))))
 '(magit-diff-removed ((t (:background "color-124" :foreground "black"))))
 '(magit-diff-removed-highlight ((t (:background "red" :foreground "black"))))
 '(magit-diff-whitespace-warning ((t (:inherit trailing-whitespace :foreground "black"))))
 '(magit-section-highlight ((t (:background "grey95" :foreground "black"))))
 '(match ((t (:background "yellow1" :foreground "black"))))
 '(minibuffer-prompt ((t (:foreground "cyan"))))
 '(org-agenda-clocking ((t (:inherit secondary-selection :foreground "black"))))
 '(org-agenda-column-dateline ((t (:inherit org-column :foreground "black"))))
 '(org-agenda-restriction-lock ((t (:background "#eeeeee" :foreground "black"))))
 '(org-agenda-structure ((t (:foreground "bright green"))))
 '(org-clock-overlay ((t (:background "yellow25"))))
 '(org-column ((t (:background "grey90" :foreground "black" :strike-through nil :underline nil :slant normal :weight normal))))
 '(org-column-title ((t (:background "grey90" :foreground "black" :underline t :weight bold))))
 '(org-document-info ((t (:foreground "color-38"))))
 '(org-document-title ((t (:foreground "color-39" :weight bold))))
 '(org-tag ((t (:inverse-video t))))
 '(rst-level-1 ((t (:background "blue"))))
 '(rst-level-2 ((t (:background "blue"))))
 '(secondary-selection ((t (:background "color-90"))))
 '(show-paren-match ((t (:background "green"))))
 '(show-paren-mismatch ((t (:background "red" :foreground "black"))))
 '(smerge-markers ((t (:background "#112233"))))
 '(smerge-mine ((t (:background "#0033F0"))))
 '(smerge-other ((t (:background "#dd1211"))))
 '(smerge-refined-added ((t (:inherit smerge-refined-change :background "#aa1111"))))
 '(smerge-refined-removed ((t (:inherit smerge-refined-change :background "#1f1111"))))
 '(trie-depth-1 ((t (:background "black" :foreground "color-47" :underline (:color "red" :style wave)))))
 '(warning ((t (:foreground "darkred" :weight bold))))
 '(window-divider ((t (:foreground "color-19"))))
 '(window-divider-first-pixel ((t (:foreground "color-19")))))
