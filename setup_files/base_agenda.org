* Base Agenda
  :__doctest__:
  Document should have section "programming".
  Document should have section "emacs".
  :END:
  :#STARTUP: overview
  :LOGBOOK:
  CLOCK: [2020-03-28 Sat 19:02]--[2020-03-28 Sat 19:27] =>  0:25
  CLOCK: [2020-03-28 Sat 18:28]--[2020-03-28 Sat 18:54] =>  0:26
  CLOCK: [2019-11-27 Wed 15:58]--[2019-11-27 Wed 16:23] =>  0:25
  CLOCK: [2019-11-26 Tue 22:08]--[2019-11-26 Tue 22:33] =>  0:25
  CLOCK: [2019-11-26 Tue 21:38]--[2019-11-26 Tue 22:03] =>  0:25
  CLOCK: [2019-09-05 Thu 22:27]--[2019-09-05 Thu 22:52] =>  0:25
  CLOCK: [2019-09-05 Thu 21:08]--[2019-09-05 Thu 21:33] =>  0:25
  CLOCK: [2019-09-05 Thu 20:38]--[2019-09-05 Thu 21:03] =>  0:25
  CLOCK: [2019-09-05 Thu 19:58]--[2019-09-05 Thu 20:23] =>  0:25
  CLOCK: [2019-09-05 Thu 18:51]--[2019-09-05 Thu 19:16] =>  0:25
  CLOCK: [2019-09-05 Thu 17:55]--[2019-09-05 Thu 18:20] =>  0:25
  CLOCK: [2019-09-05 Thu 16:19]--[2019-09-05 Thu 16:44] =>  0:25
  CLOCK: [2019-09-05 Thu 15:34]--[2019-09-05 Thu 15:59] =>  0:25
  CLOCK: [2019-09-02 Mon 16:55]--[2019-09-02 Mon 17:20] =>  0:25
  CLOCK: [2019-09-02 Mon 16:15]--[2019-09-02 Mon 16:40] =>  0:25
  CLOCK: [2019-08-24 Sat 18:04]--[2019-08-24 Sat 18:29] =>  0:25
  CLOCK: [2019-08-24 Sat 17:33]--[2019-08-24 Sat 17:58] =>  0:25
  CLOCK: [2019-08-23 Fri 19:48]--[2019-08-23 Fri 20:13] =>  0:25
  CLOCK: [2019-08-23 Fri 19:03]--[2019-08-23 Fri 19:28] =>  0:25
  CLOCK: [2019-08-23 Fri 18:17]--[2019-08-23 Fri 18:42] =>  0:25
  CLOCK: [2019-08-23 Fri 16:47]--[2019-08-23 Fri 17:12] =>  0:25
  CLOCK: [2019-08-23 Fri 13:21]--[2019-08-23 Fri 13:46] =>  0:25
  CLOCK: [2019-08-23 Fri 12:49]--[2019-08-23 Fri 13:15] =>  0:26
  CLOCK: [2019-07-29 Mon 07:54]--[2019-07-29 Mon 08:19] =>  0:25
  CLOCK: [2019-07-29 Mon 07:24]--[2019-07-29 Mon 07:49] =>  0:25
  CLOCK: [2019-07-29 Mon 06:54]--[2019-07-29 Mon 07:19] =>  0:25
  CLOCK: [2019-06-17 Mon 07:33]--[2019-06-17 Mon 07:58] =>  0:25
  CLOCK: [2019-06-14 Fri 21:11]--[2019-06-14 Fri 21:36] =>  0:25
  CLOCK: [2019-06-14 Fri 20:31]--[2019-06-14 Fri 20:56] =>  0:25
  CLOCK: [2019-06-14 Fri 19:56]--[2019-06-14 Fri 20:21] =>  0:25
  CLOCK: [2019-06-14 Fri 19:22]--[2019-06-14 Fri 19:47] =>  0:25
  CLOCK: [2019-06-13 Thu 22:11]--[2019-06-13 Thu 22:36] =>  0:25
  CLOCK: [2019-06-13 Thu 20:14]--[2019-06-13 Thu 20:39] =>  0:25
  CLOCK: [2019-06-13 Thu 19:39]--[2019-06-13 Thu 20:04] =>  0:25
  CLOCK: [2019-06-13 Thu 19:01]--[2019-06-13 Thu 19:26] =>  0:25
  CLOCK: [2019-06-13 Thu 18:10]--[2019-06-13 Thu 18:35] =>  0:25
  CLOCK: [2019-06-13 Thu 17:39]--[2019-06-13 Thu 18:04] =>  0:25
  CLOCK: [2019-06-13 Thu 16:59]--[2019-06-13 Thu 17:24] =>  0:25
  CLOCK: [2019-06-13 Thu 16:22]--[2019-06-13 Thu 16:47] =>  0:25
  CLOCK: [2019-06-12 Wed 21:34]--[2019-06-12 Wed 21:59] =>  0:25
  CLOCK: [2019-06-12 Wed 21:14]--[2019-06-12 Wed 21:33] =>  0:19
  CLOCK: [2019-06-12 Wed 20:42]--[2019-06-12 Wed 21:07] =>  0:25
  CLOCK: [2019-06-12 Wed 19:48]--[2019-06-12 Wed 20:13] =>  0:25
  CLOCK: [2019-06-12 Wed 19:11]--[2019-06-12 Wed 19:36] =>  0:25
  CLOCK: [2019-06-12 Wed 18:39]--[2019-06-12 Wed 19:04] =>  0:25
  CLOCK: [2019-06-12 Wed 18:08]--[2019-06-12 Wed 18:33] =>  0:25
  CLOCK: [2019-06-11 Tue 21:13]--[2019-06-11 Tue 21:38] =>  0:25
  CLOCK: [2019-06-11 Tue 20:00]--[2019-06-11 Tue 20:25] =>  0:25
  CLOCK: [2019-06-11 Tue 17:36]--[2019-06-11 Tue 18:01] =>  0:25
  CLOCK: [2019-06-11 Tue 16:52]--[2019-06-11 Tue 17:17] =>  0:25
  CLOCK: [2019-06-11 Tue 16:22]--[2019-06-11 Tue 16:47] =>  0:25
  CLOCK: [2019-06-10 Mon 21:52]--[2019-06-10 Mon 22:17] =>  0:25
  CLOCK: [2019-06-10 Mon 21:10]--[2019-06-10 Mon 21:35] =>  0:25
  CLOCK: [2019-06-10 Mon 19:58]--[2019-06-10 Mon 20:23] =>  0:25
  CLOCK: [2019-06-10 Mon 19:17]--[2019-06-10 Mon 19:42] =>  0:25
  CLOCK: [2019-06-10 Mon 18:32]--[2019-06-10 Mon 18:57] =>  0:25
  CLOCK: [2019-06-10 Mon 17:51]--[2019-06-10 Mon 18:16] =>  0:25
  CLOCK: [2019-06-09 Sun 17:16]--[2019-06-09 Sun 17:41] =>  0:25
  CLOCK: [2019-06-09 Sun 16:45]--[2019-06-09 Sun 17:10] =>  0:25
  CLOCK: [2019-06-08 Sat 18:18]--[2019-06-08 Sat 18:43] =>  0:25
  CLOCK: [2019-06-08 Sat 17:41]--[2019-06-08 Sat 18:06] =>  0:25
  CLOCK: [2019-06-08 Sat 17:10]--[2019-06-08 Sat 17:35] =>  0:25
  CLOCK: [2019-06-08 Sat 16:38]--[2019-06-08 Sat 17:03] =>  0:25
  CLOCK: [2019-06-07 Fri 20:19]--[2019-06-07 Fri 20:44] =>  0:25
  CLOCK: [2019-06-07 Fri 19:39]--[2019-06-07 Fri 20:04] =>  0:25
  CLOCK: [2019-06-07 Fri 18:45]--[2019-06-07 Fri 19:10] =>  0:25
  CLOCK: [2019-06-07 Fri 18:00]--[2019-06-07 Fri 18:25] =>  0:25
  CLOCK: [2019-06-07 Fri 17:28]--[2019-06-07 Fri 17:53] =>  0:25
  CLOCK: [2019-06-07 Fri 16:17]--[2019-06-07 Fri 16:42] =>  0:25
  CLOCK: [2019-05-01 Wed 15:39]--[2019-05-01 Wed 16:05] =>  0:26
  CLOCK: [2019-03-20 Wed 18:13]--[2019-03-20 Wed 18:38] =>  0:25
  CLOCK: [2019-05-01 Wed 15:08]--[2019-05-01 Wed 15:33] =>  0:25
  CLOCK: [2019-03-20 Wed 17:42]--[2019-03-20 Wed 18:07] =>  0:25
  CLOCK: [2019-03-20 Wed 17:12]--[2019-03-20 Wed 17:37] =>  0:25
  CLOCK: [2019-03-20 Wed 16:42]--[2019-03-20 Wed 17:07] =>  0:25
  CLOCK: [2019-03-11 Mon 08:21]--[2019-03-11 Mon 08:46] =>  0:25
  CLOCK: [2019-03-11 Mon 07:43]--[2019-03-11 Mon 08:08] =>  0:25
  CLOCK: [2019-03-10 Sun 19:05]--[2019-03-10 Sun 19:30] =>  0:25
  CLOCK: [2019-03-10 Sun 18:35]--[2019-03-10 Sun 19:00] =>  0:25
  CLOCK: [2019-03-10 Sun 18:05]--[2019-03-10 Sun 18:30] =>  0:25
  CLOCK: [2019-03-10 Sun 12:19]--[2019-03-10 Sun 12:44] =>  0:25
  CLOCK: [2019-03-10 Sun 11:32]--[2019-03-10 Sun 11:57] =>  0:25
  CLOCK: [2019-03-10 Sun 10:54]--[2019-03-10 Sun 11:19] =>  0:25
  CLOCK: [2019-02-28 Thu 20:39]--[2019-02-28 Thu 21:04] =>  0:25
  CLOCK: [2019-02-28 Thu 20:13]--[2019-02-28 Thu 20:38] =>  0:25
  CLOCK: [2019-02-28 Thu 19:38]--[2019-02-28 Thu 20:03] =>  0:25
  CLOCK: [2019-02-28 Thu 18:40]--[2019-02-28 Thu 19:05] =>  0:25
  CLOCK: [2019-02-25 Mon 21:02]--[2019-02-25 Mon 21:27] =>  0:25
  CLOCK: [2019-02-24 Sun 20:29]--[2019-02-24 Sun 20:54] =>  0:25
  CLOCK: [2019-02-24 Sun 19:50]--[2019-02-24 Sun 20:15] =>  0:25
  CLOCK: [2019-02-23 Sat 22:15]--[2019-02-23 Sat 22:40] =>  0:25
  CLOCK: [2019-02-23 Sat 21:44]--[2019-02-23 Sat 22:09] =>  0:25
  CLOCK: [2019-02-23 Sat 21:14]--[2019-02-23 Sat 21:39] =>  0:25
  CLOCK: [2019-02-22 Fri 21:47]--[2019-02-22 Fri 22:13] =>  0:26
  CLOCK: [2019-02-22 Fri 18:42]--[2019-02-22 Fri 19:07] =>  0:25
  CLOCK: [2019-02-22 Fri 17:46]--[2019-02-22 Fri 18:12] =>  0:26
  CLOCK: [2019-02-22 Fri 16:35]--[2019-02-22 Fri 17:00] =>  0:25
  CLOCK: [2019-02-22 Fri 15:54]--[2019-02-22 Fri 16:20] =>  0:26
  CLOCK: [2019-02-22 Fri 15:22]--[2019-02-22 Fri 15:47] =>  0:25
  CLOCK: [2019-02-22 Fri 14:52]--[2019-02-22 Fri 15:17] =>  0:25
  CLOCK: [2019-02-22 Fri 01:07]--[2019-02-22 Fri 01:32] =>  0:25
  CLOCK: [2019-02-21 Thu 22:55]--[2019-02-21 Thu 23:20] =>  0:25
  CLOCK: [2019-02-21 Thu 21:25]--[2019-02-21 Thu 21:50] =>  0:25
  CLOCK: [2019-02-21 Thu 20:53]--[2019-02-21 Thu 21:18] =>  0:25
  CLOCK: [2019-02-21 Thu 20:12]--[2019-02-21 Thu 20:37] =>  0:25
  CLOCK: [2019-02-21 Thu 19:35]--[2019-02-21 Thu 20:00] =>  0:25
  CLOCK: [2019-02-08 Fri 20:33]--[2019-02-08 Fri 20:58] =>  0:25
  CLOCK: [2019-02-08 Fri 19:55]--[2019-02-08 Fri 20:20] =>  0:25
  CLOCK: [2019-02-08 Fri 19:21]--[2019-02-08 Fri 19:46] =>  0:25
  CLOCK: [2019-02-07 Thu 18:34]--[2019-02-07 Thu 18:59] =>  0:25
  CLOCK: [2019-02-07 Thu 16:41]--[2019-02-07 Thu 17:06] =>  0:25
  CLOCK: [2019-02-07 Thu 10:56]--[2019-02-07 Thu 11:21] =>  0:25
  CLOCK: [2019-02-06 Wed 09:57]--[2019-02-06 Wed 10:22] =>  0:25
  CLOCK: [2019-02-06 Wed 09:26]--[2019-02-06 Wed 09:51] =>  0:25
  CLOCK: [2019-02-06 Wed 08:58]--[2019-02-06 Wed 09:23] =>  0:25
  CLOCK: [2019-02-05 Tue 20:30]--[2019-02-05 Tue 20:55] =>  0:25
  CLOCK: [2019-02-05 Tue 19:39]--[2019-02-05 Tue 20:04] =>  0:25
  CLOCK: [2019-02-05 Tue 18:53]--[2019-02-05 Tue 19:18] =>  0:25
  CLOCK: [2019-02-05 Tue 18:19]--[2019-02-05 Tue 18:44] =>  0:25
  CLOCK: [2019-02-05 Tue 11:52]--[2019-02-05 Tue 12:17] =>  0:25
  CLOCK: [2019-02-05 Tue 11:19]--[2019-02-05 Tue 11:44] =>  0:25
  CLOCK: [2019-02-05 Tue 10:40]--[2019-02-05 Tue 11:05] =>  0:25
  CLOCK: [2019-02-05 Tue 10:07]--[2019-02-05 Tue 10:32] =>  0:25
  CLOCK: [2019-02-05 Tue 09:30]--[2019-02-05 Tue 09:55] =>  0:25
  CLOCK: [2019-02-04 Mon 15:17]--[2019-02-04 Mon 15:42] =>  0:25
  CLOCK: [2019-02-04 Mon 14:09]--[2019-02-04 Mon 14:34] =>  0:25
  :END:
** [[file:~/github/writing/resources/years][Bibliography]]
** [[file:~/Mega/savedThreads][Twitter Threads]]
** [[~/github/languageLearning][Misc Language Repo]]                                                           :multiple_languages:learning:
** [[~/.spacemacs.d/setup_files/pomodoro_log.org][Pomodoro Log]]
** -----------------------------------------------------------------------------
** Programming
*** [[file:~/github/writing/orgfiles/trie_layer.org][Trie-layer]]
*** Python
**** TODO [[/Users/jgrey/github/py_rule][Python Rule Language and Engine]]                                       :python:important:todo:meta:simulation:institutions:exclusion_logic:library:parsing:production_system:rules:
***** Recap current language capabilities
***** integrate layer architecture
***** TODO implement type checking?
***** implement time?
***** TODO implement meta?
      up and down shifts, possibly links with layers? look at reflective papers again
***** implement other form of rule change?
***** potential data structures
      activities                    *
      protocols                     *
      fsm                           *
      layer                         *
      indeterminacy                 *
      curves                        *
      delegation?

      do-operator
      backprob weight adjust
      inline set
      sanctions
      errors / failure / recovery
      interleaving
      speech acts
      rule conflicts
      ADICO
      koster social mechanics
      carriers
      physical constraint / action

**** [[file:~/github/writing/orgfiles/cairo_pipe.org::*Cairo%20Pipeline][Cairo Pipeline]]
**** [[/Users/jgrey/github/languageLearning/python/misc_tests/heuristicRBTreeWeighting][Heuristic Tree Weighting]]                                                   :python:obsolete:incomplete:old:
*** Javascript / Web
**** [[/Users/jgrey/github/languageLearning/graphical/javascript/mordor-alike][Mordor Like Idea]]                                                           :nemesis:mordor:javascript:obsolete:incomplete:grammar:
**** TODO [[/Users/jgrey/github/js_newspaper][Newspaper Generator]]                                                   :javascript:generative:front_end:newspaper:web:procedural:
**** [[/Users/jgrey/github/js_hexagon_ai][Hexagon Board / AI Test]]                                                    :front_end:incomplete:javascript:old:parsing:web:
*** Prolog                                                                      :todo:programming:institutions:ASP:tutorial:
**** look at Bath Institutional ASP
**** [[file:~/github/otherLibs/instal-stable][InSTaL]]
*** Unity                                                                       :needs_assets:game:vault:programming:unity:
**** proof of concept imports in vault
*** Supercollider / Tidal                                                       :needs_assets:sound:supercollider:tidal:
**** proof of concept soundscape controllable from python
**** look at acropolis API to get samples/assets
**** Action languages
     C+ as well
**** TODO soundscape assets
***** TODO [[https://bbcarchdev.github.io/inside-acropolis/#consumers][Acropolis API]]
      [[http://bbcsfx.acropolis.org.uk/index][BBC Sound FX Library]]
      [[http://bbcsfx.acropolis.org.uk/][BBC sound effects frontend]]
*** Haskell                                                                     :monads:theory:programming:haskell:
**** look at implementation of monad transformers
*** To Clean
**** [[/Users/jgrey/github/languageLearning/graphical/javascript/happiton][Happiton]]                                                                   :python:directory:hofstadter:
*** Prototypes
**** Hex Board -> Preact
**** Battle System
**** Credit System
**** Mordor - alike
**** Prisoners dilemma
**** NetLogo
**** Unity
*** Libraries
**** [[file:~/github/otherLibs/Soar][Soar]]
**** [[file:~/github/otherLibs/cartago][Cartago]]
**** [[file:~/github/otherLibs/cmudict][CMU Pronounciation Dictionary]]
**** [[file:~/github/otherLibs/cockatiel][Cockatiel Test Library]]
**** [[~/github/otherLibs/coq][COQ]]
**** [[file:~/github/otherLibs/jacamo][Jacamo]]
**** [[file:~/github/otherLibs/moise][MOISE]]
**** [[file:~/github/otherLibs/npl][NPL]]
**** [[file:~/github/otherLibs/phonetic-similarity-vectors][Phonetic Similarity Vectors]]
*** Algorithms
**** [[file:~/github/otherLibs/code-for-blog/2018/type-inference][Python Type Inference]] :directory:hindley_milner:type_inference:python:
**** [[file:~/github/otherLibs/code-for-blog/2018/markov-simple][Python Markov chain]]                                                        :directory:markov:python:
**** [[file:~/github/otherLibs/code-for-blog/2018/unif][Python Unification]]                                                         :directory:python:unification:
**** [[file:~/github/otherLibs/CommonLispCode/micro-talespin.lisp][Micro-Talespin]]                                                             :directory:architecture:narrative:talespin:lisp:
**** [[file:~/github/otherLibs/BPS][Building Problem Solvers]]                                                   :directory:rules:lisp:
**** [[file:~/github/otherLibs/wavefunction-collapse][Wave function collapse python]]                                              :directory:algorithm:wave_function_collapse:python:
**** [[https://robertheaton.com/2018/12/17/wavefunction-collapse-algorithm/][Wave function collapse]]                                                     :wave_function_collapse:tutorial:to_implement:algorithm:
**** [[file:~/github/otherLibs/cathoristic-logic][Cathoristic Logic]]                                                          :directory:haskell:logic:praxis:exclusion_logic:
**** [[file:~/github/writing/orgfiles/machine_learning.org::*Machine Learning Notes][Machine Learning Notes]]
** Datasets
*** [[file:/Users/jgrey/github/writing/other_files/main_bookmarks.html][Bookmarks]]                                                                   :web:html:bookmarks:directory:
    treat these as codings?
*** DONE Bookmark and saved twitter parsing
    CLOSED: [2019-09-23 Mon 18:25]
**** Bookmarks
     [[https://msdn.microsoft.com/en-us/library/aa753582(v=vs.85).aspx][bookmark format]]
***** DONE Parse into emacs readable format
      CLOSED: [2019-03-14 Thu 19:46]
***** DONE Create a helm navigation layer
      CLOSED: [2019-05-25 Sat 00:24]
**** Saved thread Parsing
***** Cleanup of org files
      remove duplicate tweets / threads
      add links to other people
      remove empty headings
      fill buffers
      get all tweets, check there isn't an embedded gif or video.
      download gifs and videos as necessary

*** Audio                                                                       :to_implement:web:
    [[file:~/Mega/Datasets/BBCSoundEffects.csv][BBCSoundEffects.csv]]

**** extract categories, description, cdname
**** group by time
**** helm access
*** Code
**** Monroe Domain Plans
**** [[file:/Users/jgrey/Mega/code_backups/shop2random.lisp][Shop2 Plan generator]]
**** [[file:~/Mega/code_backups/netlogo/Evolution_of_Norms][Evolution of Norms]]                                                         :norms:netlogo:
**** [[file:~/Mega/code_backups/netlogo/Social_Norms_(Emperor's_Dilemma)][Social Norms / Emperor's Dilemma]]                                           :norms:netlogo:
**** Chuck Examples                                                             :nytimes:chuck:
**** [[file:~/Mega/code_backups/logic/ccalc-2.0r2.tar.gz][CCalc]]                                                                      :prolog:
**** [[file:~/Mega/code_backups/logic/BPS1024.zip][Building Problem Solvers]]                                                   :lisp:
**** [[file:~/Mega/code_backups/Immerse Code Backup-20170930T102013Z-002.zip][Immerse]]                                                                    :csharp:
*** Games
**** [[file:~/Mega/Datasets/twine][Twine]]
     [[https://github.com/ehenestroza/twine-graph/blob/master/twine_graph/twine_graph.py][Twine Graph on Github]]
     [[https://github.com/McJones/twinespacer/blob/master/twinespacer.py][Twine Spacer on Github]]
     [[https://github.com/cauli/TwineJson/blob/master/js/app/converter.js][TwinJson Converter on Github]]
     [[https://github.com/daterre/Cradle#importing-a-story][Cradle Converter on Github]]
**** CiF
***** Rules
      [[file:/Users/jgrey/Mega/Datasets/gameData/CiFStates][CiF States]]
***** Level Traces
      [[file:/Users/jgrey/Mega/Datasets/gameData/CifLevelTrace][Level Trace Storage]]
***** Prom Week Speech Acts
      [[file:/Users/jgrey/Mega/Datasets/compressed/speech_acts/prom_week_dialogue_annotated_for_speech_acts.tsv][prom week dialogue annotated for speech acts]]
**** Versu
     [[file:~/Mega/code_backups/cotillion.zip][Cotillion Zip]]

***** Rules
**** [[file:~/Mega/Datasets/gameData/DevMaterials][Postmortem Dev Materials]]
**** [[file:~/Mega/Datasets/code_backups/games/SimHealth_DOS_EN.zip][SimHealth]]
**** [[file:~/Mega/Datasets/code_backups/games/Yoda_Stories.zip][Yoda Stories]]
**** [[file:~/Mega/Documents/Kingdom_RPG.zip][Kingdom]]
**** [[file:~/Mega/Documents/Microscope_RPG.zip][Microscope]]
*** Text
****** [#A] NYT
******* try using title trie grammars
****** Supreme Court
******* [[file:~/Mega/Datasets/compressed/scotus/supreme_court_dialogs_corpus_v1.01(1).zip][Dialogue]]
******* Cases
        [[file:~/Mega/Datasets/compressed/scotus/SCDB_2014_01_caseCentered_Vote.csv.zip][file:~/Mega/Datasets/SCDB_2014_01_caseCentered_Vote.csv.zip]]
        [[file:~/Mega/Datasets/compressed/scotus/SCDB_2014_01_justiceCentered_Vote.csv.zip][file:~/Mega/Datasets/SCDB_2014_01_justiceCentered_Vote.csv.zip]]
        [[file:~/Mega/Datasets/compressed/scotus/SCDB_2015_01_justiceCentered_LegalProvision.csv.zip][file:~/Mega/Datasets/SCDB_2015_01_justiceCentered_LegalProvision.csv.zip]]
        [[file:~/Mega/Datasets/compressed/scotus/SCDB_2018_02_caseCentered_Citation.csv.zip][file:~/Mega/Datasets/SCDB_2018_02_caseCentered_Citation.csv.zip]]
        [[file:~/Mega/Datasets/compressed/scotus/SCDB_2018_02_caseCentered_Docket.csv.zip][file:~/Mega/Datasets/SCDB_2018_02_caseCentered_Docket.csv.zip]]
        [[file:~/Mega/Datasets/compressed/scotus/SCDB_Legacy_04_caseCentered_Citation.csv.zip][file:~/Mega/Datasets/SCDB_Legacy_04_caseCentered_Citation.csv.zip]]

****** [[file:~/Mega/Datasets/texts/StandOnZanzibar.txt][Stand On Zanzibar]]
****** [[file:~/Mega/Datasets/compressed/Stanford_politeness_corpus.zip][Politeness Corpus]]
****** [[file:~/Mega/Datasets/kjv_apocrypha_utf8_FINAL.xml][King James Bible]]
****** [[file:~/Mega/Datasets/texts/me2-text-dialogue.txt][Mass Effect 2 Dialogue]]
****** [[file:~/Mega/Datasets/compressed/pizza_request_dataset.tar.gz][Pizza Request]]
****** [[file:~/Mega/Datasets/compressed/transcripts.tar.gz][White House Transcripts]]
****** [[file:~/Mega/Datasets/roberts_rules.txt][Roberts Rules of Order]]
****** [[file:~/Mega/Datasets/compressed/speech_acts/swb1_dialogact_annot(4).tar.gz][Switchboard Corpus]]
       [[file:~/Mega/Datasets/compressed/speech_acts/swda.zip][file:~/Mega/Datasets/swda.zip]]
******* swda.py
****** [[file:~/Mega/Datasets/compressed/quotes.tar.gz][White House Speech Quotes]]
       [[file:~/Mega/Datasets/compressed/quotes_json.tar.gz][file:~/Mega/Datasets/quotes_json.tar.gz]]
****** [[file:~/Mega/Datasets/compressed/uscode.zip][US Code]]
****** [[file:~/Mega/Datasets/compressed/verb-pair-orders.gz][Verb Pairs]]

*** Images
**** [[file:~/github/writing/orgfiles/image_summary.org][Image Summaries]]
**** TODO [[file:~/github/writing/orgfiles/glitch_assets_summary.org][Glitch Assets Summary]]
     possibly use these in vault?
**** [[file:~/Mega/Datasets/SFAM/sfam_summary.org][SFAM Summary]]                                                               :tagged:parsed:
**** [[file:~/Mega/Datasets/Scarfolk][Scarfolk]]                                                                   :to_parse:
**** online assets
**** portraits
*** Measurements
**** [[file:~/Mega/Datasets/compressed/social_physics/RealityMining.zip][Reality Mining]]
**** [[file:~/Mega/Datasets/compressed/social_physics/Friends&Family.zip][Friends and Family]]
**** [[file:~/Mega/Datasets/compressed/social_physics/2014_SQF.zip][SQF]]
**** [[file:~/Mega/Datasets/compressed/social_physics/HDC-full.zip][HDC]]
**** [[file:~/Mega/Datasets/compressed/social_physics/SocialEvolution.zip][Social Evolution]]
**** [[file:~/Mega/Datasets/compressed/diplomacy_data_1.0.zip][Diplomacy]]
**** [[file:~/Mega/Datasets/compressed/plans/linuxCorpus-1.0.zip][Linux Dataset]]
*** [[https://docs.google.com/spreadsheets/d/1JcwsKMJtd_wYe4oeTtuyM8fm1eqFQw9A9VGDjnCKFiM/edit#gid=69023141][Legislative Rules dataset]]                                                   :rules:
** Annotations / Examples
*** TODO [#A] Snatch delegation                                                 :delegation:film:
    to lead to delegation in iEl
** Emacs
*** [[~/github/jg_emacs_files][Emacs files]]                                    :directory:lisp:setup:emacs:
*** Reference
**** [[https://github.com/cute-jumper/parsec.el][Parsec]]
**** [[https://bibtexparser.readthedocs.io/en/master/tutorial.html][bibtex parser]]                                                              :python:bibtex:
**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Buffer-Modification.html#Buffer-Modification][Buffer Modification]]
**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Change-Hooks.html#Change-Hooks][Change Hooks]]
**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Changing-Properties.html#Changing-Properties][Changing Text Properties]]
**** [[https://www.gnu.org/software/emacs/manual/html_mono/cl.html][CL]]
**** [[https://orgmode.org/worg/org-tutorials/org-column-view-tutorial.html][column view]]
**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Debugger.html#Debugger][Debugging]]
**** [[https://www.gnu.org/software/emacs/manual/html_mono/ede.html][EDE]]
**** [[https://www.gnu.org/software/emacs/manual/html_mono/eieio.html][EIEIO]]
**** [[https://github.com/skeeto/elfeed][Elfeed]]
**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Text.html#Text][emacs lisp text manipulation]]
**** Font-Locking
     Reminder: font-lock will override manually set text
     properties, so wrap any calls with a let of
     inhibit-modification-hooks t to override

**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Major-Mode-Conventions.html#Major-Mode-Conventions][Major Mode conventions]]
***** Define a major mode command whose name ends in ‘-mode’.                   :naming:
***** Write a documentation string                                              :documentation:
***** Start by calling ‘kill-all-local-variables’.
***** Set the variable ‘major-mode’ to the major mode command symbol.           :naming:
***** Set the variable ‘mode-name’ to the “pretty” name of the mode.            :naming:
***** The major mode command should be idempotent.
***** All variables and functions should start with the major mode name         :naming:
***** The mode should set ‘indent-line-function’
***** The major mode should usually have its own keymap
      The major mode command should call ‘use-local-map’ to install this local
      map.

      This keymap should be stored permanently in a global variable named
      ‘MODENAME-mode-map’. Normally the library that defines the mode sets this
      variable.

***** Major modes should not alter matters of user preference
      Such as whether Auto-Fill mode is enabled. Leave this to
      each user to decide. However, a major mode should customize other
      variables so that Auto-Fill mode will work usefully _if_ the user decides
      to use it.
***** The mode may have its own syntax table or may share one with other
      related modes. If it has its own syntax table, it should store this in a
      variable named ‘MODENAME-mode-syntax-table’.
***** If the mode handles a language that has a syntax for comments, it
      should set the variables that define the comment syntax.
***** The mode may have its own abbrev table or may share one with other
      related modes. If it has its own abbrev table, it should store this in a
      variable named ‘MODENAME-mode-abbrev-table’. If the major mode command
      defines any abbrevs itself, it should pass ‘t’ for the SYSTEM-FLAG
      argument to ‘define-abbrev’.
***** The mode should specify how to do highlighting for Font Lock mode,
      by setting up a buffer-local value for the variable ‘font-lock-defaults’
***** Each face that the mode defines should, if possible, inherit from         :display:
      an existing Emacs face.
***** The mode can specify how to complete various keywords by adding one       :naming:
      or more buffer-local entries to the special hook
      ‘completion-at-point-functions’.
***** To make a buffer-local binding for an Emacs customization variable,
      use ‘make-local-variable’ in the major mode command, not
      ‘make-variable-buffer-local’. The latter function would make the variable
      local to every buffer in which it is subsequently set, which would affect
      buffers that do not use this mode. It is undesirable for a mode to have
      such global effects.

      With rare exceptions, the only reasonable way to use
      ‘make-variable-buffer-local’ in a Lisp package is for a variable which is
      used only within that package. Using it on a variable used by other
      packages would interfere with them.
***** Each major mode should have a normal “mode hook” named
      ‘MODENAME-mode-hook’. The very last thing the major mode command should do
      is to call ‘run-mode-hooks’. This runs the normal hook
      ‘change-major-mode-after-body-hook’, the mode hook, the function
      ‘hack-local-variables’ (when the buffer is visiting a file), and then the
      normal hook ‘after-change-major-mode-hook’.
***** The major mode command may start by calling some other major mode
      command (called the “parent mode”) and then alter some of its settings. A
      mode that does this is called a “derived mode”. The recommended way to
      define one is to use the ‘define-derived-mode’ macro, but this is not
      required. Such a mode should call the parent mode command inside a
      ‘delay-mode-hooks’ form. (Using ‘define-derived-mode’ does this
      automatically.)
***** If something special should be done if the user switches a buffer
      from this mode to any other major mode, this mode can set up a
      buffer-local value for ‘change-major-mode-hook’
***** If this mode is appropriate only for specially-prepared text
      produced by the mode itself (rather than by the user typing at the
      keyboard or by an external file), then the major mode command symbol
      should have a property named ‘mode-class’ with value ‘special’, put on as
      follows:

      (put 'funny-mode 'mode-class 'special)

      This tells Emacs that new buffers created while the current buffer is in
      Funny mode should not be put in Funny mode, even though the default value
      of ‘major-mode’ is ‘nil’. By default, the value of ‘nil’ for ‘major-mode’
      means to use the current buffer’s major mode when creating new buffers
      (*note Auto Major Mode::), but with such ‘special’ modes, Fundamental mode
      is used instead. Modes such as Dired, Rmail, and Buffer List use this
      feature.

      The function ‘view-buffer’ does not enable View mode in buffers whose
      mode-class is special, because such modes usually provide their own
      View-like bindings.

      The ‘define-derived-mode’ macro automatically marks the derived mode as
      special if the parent mode is special. Special mode is a convenient parent
      for such modes to inherit from; *Note Basic Major Modes::.
***** If you want to make the new mode the default for files with certain
      recognizable names, add an element to ‘auto-mode-alist’ to select the mode
      for those file names. If you define the mode command to autoload, you
      should add this element in the same file that calls ‘autoload’. If you use
      an autoload cookie for the mode command, you can also use an autoload
      cookie for the form that adds the element. If you do not autoload the mode
      command, it is sufficient to add the element in the file that contains the
      mode definition.
***** The top-level forms in the file defining the mode should be written
      so that they may be evaluated more than once without adverse consequences.
      For instance, use ‘defvar’ or ‘defcustom’ to set mode-related variables,
      so that they are not reinitialized if they already have a value.

**** Mode definitions
     #+begin_src elisp results output/value
       (define-derived-mode child fundamental-mode "A Mode"
       ;; Stuff

         )
     #+end_src

**** [[https://orgmode.org/worg/org-contrib/org-drill.html][Org-Drill]]                                                                  :spaced_repetition:memory:
**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Overlays.html][Overlays]]
**** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Special-Properties.html#Special-Properties][Properties]]
**** [[https://www.gnu.org/software/emacs/manual/html_mono/semantic.html][Semantic]]
**** [[https://stackoverflow.com/questions/1249497/command-to-center-screen-horizontally-around-cursor-on-emacs][Stackoverflow center column]]
     #+begin_src elisp results output/value
       (defun my-horizontal-recenter ()
         "make the point horizontally centered in the window"
         (interactive)
         (let ((mid (/ (window-width) 2))
               (line-len (save-excursion (end-of-line) (current-column)))
               (cur (current-column)))
           (if (< mid cur)
               (set-window-hscroll (selected-window)
                                   (- cur mid)))))
     #+end_src
**** Org Settings
***** "#+ARCHIVE %s_done"
      Sets the archive location of the agenda file.  The corresponding
      variable is ‘org-archive-location’.
***** ‘#+CATEGORY’
      Sets the category of the agenda file, which applies to the entire
      document.
***** ‘#+COLUMNS: %25ITEM ...’
      Set the default format for columns view.  This format applies when
      columns view is invoked in locations where no ‘COLUMNS’ property
      applies.
***** ‘#+CONSTANTS: name1=value1 ...’
      Set file-local values for constants that table formulas can use.
      This line sets the local variable
      ‘org-table-formula-constants-local’.  The global version of this
      variable is ‘org-table-formula-constants’.
***** ‘#+FILETAGS: :tag1:tag2:tag3:’
      Set tags that all entries in the file inherit from, including the
      top-level entries.
***** ‘#+LINK: linkword replace’
      Each line specifies one abbreviation for one link.  Use multiple
      ‘LINK’ keywords for more, see *note Link Abbreviations::.  The
      corresponding variable is ‘org-link-abbrev-alist’.
***** ‘#+PRIORITIES: highest lowest default’
      This line sets the limits and the default for the priorities.  All
      three must be either letters A–Z or numbers 0–9.  The highest
      priority must have a lower ASCII number than the lowest priority.
***** ‘#+PROPERTY: Property_Name Value’
      This line sets a default inheritance value for entries in the
      current buffer, most useful for specifying the allowed values of a
      property.
***** ‘#+SETUPFILE: file’
      The setup file or a URL pointing to such file is for additional
      in-buffer settings.  Org loads this file and parses it for any
      settings in it only when Org opens the main file.  If URL is
      specified, the contents are downloaded and stored in a temporary
      file cache.  ‘C-c C-c’ on the settings line parses and loads the
      file, and also resets the temporary file cache.  Org also parses
      and loads the document during normal exporting process.  Org parses
      the contents of this document as if it was included in the buffer.
      It can be another Org file.  To visit the file—not a URL—use ‘C-c
      '’ while point is on the line with the file name.
***** ‘#+STARTUP:’
      Startup options Org uses when first visiting a file.

      The first set of options deals with the initial visibility of the
      outline tree.  The corresponding variable for global default
      settings is ‘org-startup-folded’ with a default value of ‘t’, which
      is the same as ‘overview’.

      ‘overview’
      Top-level headlines only.

      ‘content’
      All headlines.

      ‘showall’
      No folding on any entry.

      ‘showeverything’
      Show even drawer contents.

      Dynamic virtual indentation is controlled by the variable
      ‘org-startup-indented’(1).

      ‘indent’
      Start with ‘org-indent-mode’ turned on.

      ‘noindent’
      Start with ‘org-indent-mode’ turned off.

      Aligns tables consistently upon visiting a file.  The corresponding
      variable is ‘org-startup-align-all-tables’ with ‘nil’ as default
      value.

      ‘align’
      Align all tables.

      ‘noalign’
      Do not align tables on startup.

      Shrink table columns with a width cookie.  The corresponding
      variable is ‘org-startup-shrink-all-tables’ with ‘nil’ as default
      value.

      When visiting a file, inline images can be automatically displayed.
      The corresponding variable is ‘org-startup-with-inline-images’,
      with a default value ‘nil’ to avoid delays when visiting a file.

      ‘inlineimages’
      Show inline images.

      ‘noinlineimages’
      Do not show inline images on startup.

      Logging the closing and reopening of TODO items and clock intervals
      can be configured using these options (see variables
      ‘org-log-done’, ‘org-log-note-clock-out’, and ‘org-log-repeat’).

      ‘logdone’
      Record a timestamp when an item is marked DONE.

      ‘lognotedone’
      Record timestamp and a note when DONE.

      ‘nologdone’
      Do not record when items are marked DONE.

      ‘logrepeat’
      Record a time when reinstating a repeating item.

      ‘lognoterepeat’
      Record a note when reinstating a repeating item.

      ‘nologrepeat’
      Do not record when reinstating repeating item.

      ‘lognoteclock-out’
      Record a note when clocking out.

      ‘nolognoteclock-out’
      Do not record a note when clocking out.

      ‘logreschedule’
      Record a timestamp when scheduling time changes.

      ‘lognotereschedule’
      Record a note when scheduling time changes.

      ‘nologreschedule’
      Do not record when a scheduling date changes.

      ‘logredeadline’
      Record a timestamp when deadline changes.

      ‘lognoteredeadline’
      Record a note when deadline changes.

      ‘nologredeadline’
      Do not record when a deadline date changes.

      ‘logrefile’
      Record a timestamp when refiling.

      ‘lognoterefile’
      Record a note when refiling.

      ‘nologrefile’
      Do not record when refiling.

      Here are the options for hiding leading stars in outline headings,
      and for indenting outlines.  The corresponding variables are
      ‘org-hide-leading-stars’ and ‘org-odd-levels-only’, both with a
      default setting ‘nil’ (meaning ‘showstars’ and ‘oddeven’).

      ‘hidestars’
      Make all but one of the stars starting a headline invisible.

      ‘showstars’
      Show all stars starting a headline.

      ‘indent’
      Virtual indentation according to outline level.

      ‘noindent’
      No virtual indentation according to outline level.

      ‘odd’
      Allow only odd outline levels (1, 3, ...).

      ‘oddeven’
      Allow all outline levels.

      To turn on custom format overlays over timestamps (variables
      ‘org-put-time-stamp-overlays’ and
      ‘org-time-stamp-overlay-formats’), use:

      ‘customtime’
      Overlay custom time format.

      The following options influence the table spreadsheet (variable
      ‘constants-unit-system’).

      ‘constcgs’
      ‘constants.el’ should use the c-g-s unit system.

      ‘constSI’
      ‘constants.el’ should use the SI unit system.

      To influence footnote settings, use the following keywords.  The
      corresponding variables are ‘org-footnote-define-inline’,
      ‘org-footnote-auto-label’, and ‘org-footnote-auto-adjust’.

      ‘fninline’
      Define footnotes inline.

      ‘fnnoinline’
      Define footnotes in separate section.

      ‘fnlocal’
      Define footnotes near first reference, but not inline.

      ‘fnprompt’
      Prompt for footnote labels.

      ‘fnauto’
      Create ‘[fn:1]’-like labels automatically (default).

      ‘fnconfirm’
      Offer automatic label for editing or confirmation.

      ‘fnadjust’
      Automatically renumber and sort footnotes.

      ‘nofnadjust’
      Do not renumber and sort automatically.

      To hide blocks on startup, use these keywords.  The corresponding
      variable is ‘org-hide-block-startup’.

      ‘hideblocks’
      Hide all begin/end blocks on startup.

      ‘nohideblocks’
      Do not hide blocks on startup.

      The display of entities as UTF-8 characters is governed by the
      variable ‘org-pretty-entities’ and the keywords

      ‘entitiespretty’
      Show entities as UTF-8 characters where possible.

      ‘entitiesplain’
      Leave entities plain.
***** ‘#+TAGS: TAG1(c1) TAG2(c2)’
      These lines (several such lines are allowed) specify the valid tags
      in this file, and (potentially) the corresponding _fast tag selection_
      keys.  The corresponding variable is ‘org-tag-alist’.
***** ‘#+TODO:’ ‘#+SEQ_TODO:’ ‘#+TYP_TODO:’
      These lines set the TODO keywords and their interpretation in the
      current file.  The corresponding variable is ‘org-todo-keywords’.

*** Expansions
**** Buffer Register Sets
***** Add files/buffers to register
****** Regex / File Type
****** Mode
****** Directory
****** Directory DFS
***** View Register
***** Open Single and Multiple files from register
***** Apply action to all files in register
***** Search only in files in register
***** Make Register persistent (register -> bookmark)
***** Set Operations on Registers

**** custom hide overlays
**** Org SubTree Transient State navigation
     Add a transient state for moving, promoting, demoting etc subtrees
**** Org Table Transient state
     Transient state to create, add (column/row), and navigate tables
**** org-agenda keymap modifications
     swap priority mods into < and >
**** outline-toc package
**** tag and colourize words minor mode to run anywhere
     be able to tag and colourize things dynamically, based on what you need at
     any given moment
     then be able to tag into groups?

     run search for regexp / current work, either apply overlay or
     modify text properties
     keep track so as to clear as necessary.

**** Tweet action for helm-bibtex and bookmark-helm
** -----------------------------------------------------------------------------
** Writing
*** [[file:~/github/writing/orgfiles/design_writing.org::*Design%20writing][Design writing]]
*** [[file:~/github/writing/orgfiles/dissertation.org::*Dissertation bits and pieces][Dissertation bits and pieces]]
*** [[file:~/github/writing/orgfiles/DSLs.org::*DSLs][DSL/Framework/System/Tool Review]]
*** [[file:~/github/writing/orgfiles/steamGames.org::*Games%20list%20and%20notes][Games list and notes]]
*** [[~/github/jgrey4296.github.io][jgrey4296.github.io]]                                                         :writing:important:todo:target:blog:web:
**** [[~/github/jsons][jsons representations]]                                                      :json:writing:
**** [[~/github/writing][misc writing]]                                                               :writing:generic:
*** [[file:~/github/writing/orgfiles/methods.org::*Methods%20notes][Methods notes]]
*** [[file:~/github/writing/orgfiles/misc_writing.org::*Misc%20writing][Misc writing]]
*** [[~/github/writing/orgfiles][Org Files]]                                                                   :directory:main_collection:
*** [[file:~/github/writing/orgfiles/probability.org::*Probability][Probability]]
*** [[file:~/github/writing/orgfiles/research_questions.org::*Research%20Questions%20and%20Contributions%20Compilation][Research Questions and Contributions Compilation]]
*** [[file:~/github/writing/paper_notes/index.org::*Summary%20Index][Summary Index]]                                                               :papers:
*** [[file:~/github/writing/orgfiles/taxonomies.org::*Taxonomies][Taxonomies]]
*** [[file:~/github/writing/orgfiles/examples_index.org::*Institutional%20Source%20Material][Institutional Source Material]]
** -----------------------------------------------------------------------------
** People
*** [[https://scholar.google.com/citations?user=rWPcKqkAAAAJ&hl=en&oi=sra][Talcot Parsons]]
*** [[http://www.abdoumaliqsimone.com/publications.html][AbouMaliq Simone]]
*** [[http://worrydream.com/][Bret Victor]]
**** [[http://worrydream.com/ABriefRantOnTheFutureOfInteractionDesign/][A Brief Rant on the Future of Interaction Design]]                           :design:capability:tools:hands:
**** TODO [[https://explorabl.es/all/][Explorables]]
*** [[http://www.lsi.upc.edu/~jvazquez/publications.php][J. Vázquez Salceda]]                                                          :look_into:research:papers:
*** [[https://scholar.google.com/citations?user=iR-SIW8AAAAJ&hl=en&oi=sra][Jodie Sabater-Mir]]                                                           :reputation:look_into:research:
*** [[http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en][Alan Kay OOP]]                                                                :programming_languages:
*** [[https://scholar.google.com/citations?hl=en&user=FncBQzIAAAAJ&view_op=list_works&sortby=pubdate][Cristiano Castelfranchi]]                                                     :programming_languages:MAS:
*** [[http://donellameadows.org/][Donna Meadows]]                                                               :MAS:systems_thinking:
*** [[https://marhicks.com/syllabi.html#womenincomputing][Mar Hicks]]                                                                   :quote:
    "My classes are not only about "what happened" in the past, but how we know
    what we think we know. I often tell my students that history is the process
    of deciding which stories to tell and which stories to hide."
** -----------------------------------------------------------------------------
** Misc
*** TODO Prototype some Mechanical Turk Tasks                                   :survey:online:price:amazon:
*** TODO Structural phenomenology?                                              :look_into:
*** TODO Get Castelfranchi: Behavioral Implicit Communication                   :look_into:
*** TODO Vignettes
*** TODO [[https://ncase.me/remember/][Spaced Repetition]]
*** TODO [[/Users/jgrey/Mega/Images/misc_research_images/alien_behave.png][Alien Behaviour Tree]]
*** [[http://ifaamas.org/Proceedings/aamas2018/forms/contents.htm][AAMAS Proceedings]]                                                           :papers:MAS:look_into:conference:
*** [[http://defeasible.org/][Defeasible Logic]]                                                            :logic:
*** [[file:~/github/otherLibs/Bidirectional][Bidirectional Type Checking Haskell]]                                         :directory:haskell:type_inference:
*** [[http://www.parliamentbook.com/spaces][Parliament Book]]
*** [[https://www.soundsurvey.org.uk/index.php/history/street_cries/brit1/626/3387][Sound Survey]]
*** [[https://en.wikipedia.org/wiki/Kanban][Kanban]]
*** [[http://plantuml.com/sequence-diagram][PlantUML]]
*** [[https://multiagentcontest.org/publications/][Multi Agent Contest]]
    https://github.com/agentcontest/massim_2020
*** [[http://slatestarcodex.com/2014/04/28/the-control-group-is-out-of-control/][The Control Group is out of control]]                                         :science:methods:
*** [[http://www.sosmath.com/algebra/fraction/frac3/frac3.html][SoS Math]]                                                                    :math:useful:
*** [[http://www.vox.com/2014/10/27/7062921/immigration-1900-race-racism-quotas-eugenics-map-settled-united-states][Eugenics map]]
*** [[http://rosettacode.org/wiki/Rosetta_Code][Rosetta Code]]
*** [[http://overapi.com/][Over API]]
*** [[http://www.1001freefonts.com/][Free Fonts]]
*** [[http://heterogenoustasks.wordpress.com/2014/09/22/a-bestiary-of-player-agency/][Beastiary of Player Agency]]
    [[https://heterogenoustasks.wordpress.com/2015/06/04/naming-and-npcsity/][NPC Naming]]
*** [[http://www.nexusmods.com/skyrim/mods/modmanager/][Nexus Mods]]
*** [[http://www.rockpapershotgun.com/2014/10/22/skyrim-survival-mods/#more-243615][Skyrim Mods]]
*** [[https://docs.oracle.com/javase/7/docs/api/][Java API]]
*** ASP and rules
    see cite:Eiter2009 for *stratified programs*.
    Specifies evaluation order for predicates in a logic program.
*** [[https://edi.opml.co.uk/research-cat/institutional-diagnostic-tool/][Institutional Diagnostic Tool]]
*** Against Machine learning
    reconfigure traditional comp sci metrics
    to consider climate change.
    Performance is good, but so is not designing something
    to take up entire percentage points of world energy.
** Tasks
*** TODO [[https://quality-diversity.github.io/papers][Quality-Diversity]]
*** TODO emacs editor
*** TODO Spec compile to architecture
*** TODO Source code analysis
    ABL, Don't Starve etc
*** TODO unit institution
*** TODO performative outputs
*** TODO make bookmarks helm output to a list sorted by year, grouped by author...
