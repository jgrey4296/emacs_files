* Base Agenda
  :LOGBOOK:
  CLOCK: [2019-02-28 Thu 20:39]--[2019-02-28 Thu 21:04] =>  0:25
  CLOCK: [2019-02-28 Thu 20:13]--[2019-02-28 Thu 20:38] =>  0:25
  CLOCK: [2019-02-28 Thu 19:38]--[2019-02-28 Thu 20:03] =>  0:25
  CLOCK: [2019-02-28 Thu 18:40]--[2019-02-28 Thu 19:05] =>  0:25
  CLOCK: [2019-02-25 Mon 21:02]--[2019-02-25 Mon 21:27] =>  0:25
  CLOCK: [2019-02-24 Sun 20:29]--[2019-02-24 Sun 20:54] =>  0:25
  CLOCK: [2019-02-24 Sun 19:50]--[2019-02-24 Sun 20:15] =>  0:25
  CLOCK: [2019-02-23 Sat 22:15]--[2019-02-23 Sat 22:40] =>  0:25
  CLOCK: [2019-02-23 Sat 21:44]--[2019-02-23 Sat 22:09] =>  0:25
  CLOCK: [2019-02-23 Sat 21:14]--[2019-02-23 Sat 21:39] =>  0:25
  CLOCK: [2019-02-22 Fri 21:47]--[2019-02-22 Fri 22:13] =>  0:26
  CLOCK: [2019-02-22 Fri 18:42]--[2019-02-22 Fri 19:07] =>  0:25
  CLOCK: [2019-02-22 Fri 17:46]--[2019-02-22 Fri 18:12] =>  0:26
  CLOCK: [2019-02-22 Fri 16:35]--[2019-02-22 Fri 17:00] =>  0:25
  CLOCK: [2019-02-22 Fri 15:54]--[2019-02-22 Fri 16:20] =>  0:26
  CLOCK: [2019-02-22 Fri 15:22]--[2019-02-22 Fri 15:47] =>  0:25
  CLOCK: [2019-02-22 Fri 14:52]--[2019-02-22 Fri 15:17] =>  0:25
  CLOCK: [2019-02-22 Fri 01:07]--[2019-02-22 Fri 01:32] =>  0:25
  CLOCK: [2019-02-21 Thu 22:55]--[2019-02-21 Thu 23:20] =>  0:25
  CLOCK: [2019-02-21 Thu 21:25]--[2019-02-21 Thu 21:50] =>  0:25
  CLOCK: [2019-02-21 Thu 20:53]--[2019-02-21 Thu 21:18] =>  0:25
  CLOCK: [2019-02-21 Thu 20:12]--[2019-02-21 Thu 20:37] =>  0:25
  CLOCK: [2019-02-21 Thu 19:35]--[2019-02-21 Thu 20:00] =>  0:25
  CLOCK: [2019-02-08 Fri 20:33]--[2019-02-08 Fri 20:58] =>  0:25
  CLOCK: [2019-02-08 Fri 19:55]--[2019-02-08 Fri 20:20] =>  0:25
  CLOCK: [2019-02-08 Fri 19:21]--[2019-02-08 Fri 19:46] =>  0:25
  CLOCK: [2019-02-07 Thu 18:34]--[2019-02-07 Thu 18:59] =>  0:25
  CLOCK: [2019-02-07 Thu 16:41]--[2019-02-07 Thu 17:06] =>  0:25
  CLOCK: [2019-02-07 Thu 10:56]--[2019-02-07 Thu 11:21] =>  0:25
  CLOCK: [2019-02-06 Wed 09:57]--[2019-02-06 Wed 10:22] =>  0:25
  CLOCK: [2019-02-06 Wed 09:26]--[2019-02-06 Wed 09:51] =>  0:25
  CLOCK: [2019-02-06 Wed 08:58]--[2019-02-06 Wed 09:23] =>  0:25
  CLOCK: [2019-02-05 Tue 20:30]--[2019-02-05 Tue 20:55] =>  0:25
  CLOCK: [2019-02-05 Tue 19:39]--[2019-02-05 Tue 20:04] =>  0:25
  CLOCK: [2019-02-05 Tue 18:53]--[2019-02-05 Tue 19:18] =>  0:25
  CLOCK: [2019-02-05 Tue 18:19]--[2019-02-05 Tue 18:44] =>  0:25
  CLOCK: [2019-02-05 Tue 11:52]--[2019-02-05 Tue 12:17] =>  0:25
  CLOCK: [2019-02-05 Tue 11:19]--[2019-02-05 Tue 11:44] =>  0:25
  CLOCK: [2019-02-05 Tue 10:40]--[2019-02-05 Tue 11:05] =>  0:25
  CLOCK: [2019-02-05 Tue 10:07]--[2019-02-05 Tue 10:32] =>  0:25
  CLOCK: [2019-02-05 Tue 09:30]--[2019-02-05 Tue 09:55] =>  0:25
  CLOCK: [2019-02-04 Mon 15:17]--[2019-02-04 Mon 15:42] =>  0:25
  CLOCK: [2019-02-04 Mon 14:09]--[2019-02-04 Mon 14:34] =>  0:25
  :END:
** [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Text.html#Text][emacs lisp text manipulation]]
** TODO [[~/github/writing/paper_notes/index.org::*Summary%20Index][Summary Index]]
** [[~/github/languageLearning][Misc Language Repo]]                                                           :javascript:python:multiple_languages:lisp:supercollider:tidal:learning:notes:prolog:misc:
** [[file:~/github/writing/orgfiles/machine_learning.org::*Machine%20Learning%20Notes][Machine Learning Notes]]
** [[file:~/github/writing/orgfiles/nlp.org::*Natural%20Language%20Processing:][Natural Language Processing:]]
** TODO Get Castelfranchi: Behavioral Implicit Communication
** -----------------------------------------------------------------------------
** Programming
*** TODO [[~/.spacemacs.d/layers/trie][Trie-layer]]
**** Layer Implementation
***** Expand-Region implementation
***** keybindings
***** transient states
**** Meta Rules
**** Mode Implementation
***** activity mode
***** connection to runtime
***** font locking
***** helm trie exploration
***** interaction flow mode
***** keywords
***** Parsec expansion?
***** pipeline vis
***** Rational Time visualisation
***** snippets
****** rule
****** interaction flow
****** activity pyramid
***** tagging
***** trie layer flattned representation
***** Window layouts
***** working directory loading
**** Rational Time
*** Javascript / Web
**** [[~/github/mordor-alike][Mordor Like Idea]]                                :nemesis:mordor:javascript:obsolete:incomplete:grammar:
**** TODO [[~/github/newspaper_gen][Newspaper Generator]]                       :javascript:generative:front_end:newspaper:web:procedural:
**** [[~/github/hexagonAITest][Hexagon Board / AI Test]]                        :front_end:incomplete:javascript:old:parsing:web:
*** Python
***** TODO [#A] [[~/github/documentUnitTester][Document Unit Tester]]                                            :writing:support:tool:test_driven_development:python:
****** setup a generator for org files
***** [[~/github/heuristicRBTreeWeighting][Heuristic Tree Weighting]]                                                  :obsolete:incomplete:old:python:
***** [[~/github/islandGen][Voronoi Island Gen]]                                                        :incomplete:python:image:
      integrate into pipeline
***** TODO [#A] [[~/github/cairoCity][Cairo City Generator]]                                            :cairo:graphical:image:generative:front_end:layers:city:python:
****** DONE [#A] integrate with cairo_pipeline
       CLOSED: [2019-02-10 Sun 13:16]
****** TODO [#B] line -> street and space algorithm
****** TODO Return to [[file:~/github/cairoCity/citygen/City.py::class%20City:][<Cairo City>]]
***** [[~/github/cairo_pipeline][Cairo Pipeline Architecture]]                                               :cairo:graphical:active:layers:python:
***** [[~/github/cairo_utils][Cairo Utilities]]                                                           :graphical:active:dcel:voronoi:cairo:library:tool:
***** [[~/github/nytimes_scraper][NYT Scraper]]                                                               :data_analysis:grammar:scraper:dataset:nytimes:
***** TODO [#C] [[~/github/pyAStar][Python Astar Implementation]]                                     :library:pathfinding:maze:astar:python:
****** integrate into pythonRuleEngine?
       needs to be able to control vault movement as well
***** TODO [#A] [[~/github/pythonRuleEngine][Python Rule Language and Engine]]                                 :python:important:todo:meta:simulation:institutions:exclusion_logic:library:parsing:production_system:rules:
****** Recap current language capabilities
****** integrate layer architecture
****** TODO implement type checking?
****** implement time?
****** TODO [#A] implement meta?
       up and down shifts, possibly links with layers? look at reflective papers again
****** implement other form of rule change?
*** TODO Prolog                                                                 :todo:programming:institutions:ASP:tutorial:
**** continue with prolog tutorial
**** return to ASP
**** look at Bath Institutional ASP
*** TODO Unity                                                                  :needs_assets:game:vault:programming:unity:
**** proof of concept imports in vault
*** TODO Supercollider / Tidal                                                  :needs_assets:sound:supercollider:tidal:
**** proof of concept soundscape controllable from python
**** look at acropolis API to get samples/assets
**** Action languages
     C+ as well
**** TODO [#A] soundscape assets
***** TODO [#A] [[https://bbcarchdev.github.io/inside-acropolis/#consumers][Acropolis API]]
      [[http://bbcsfx.acropolis.org.uk/index][BBC Sound FX Library]]
      [[bbcsfx.acropolis.org.uk/][BBC sound effects frontend]]
*** TODO Haskell                                                                :monads:theory:programming:haskell:
**** look at implementation of monad transformers
*** To Clean
**** [[~/github/happiton][~/github/happiton]]                                                          :obsolete:incomplete:javascript:
*** Prototypes
**** Hex Board -> Preact
**** Battle System
**** Credit System
**** Mordor - alike
**** Prisoners dilemma
**** NetLogo
**** Unity
** TODO [#B] Datasets
   To add: don't startve, and other games
   SFAM, Quests, Changelogs?, speech acts , NYT, Social Physics Datasets
*** [[~/github/jg-SpaceBase-DF9][~/github/jg-SpaceBase-DF9]]                                                   :simulation:lua:to_analyse:codebase:game:
*** TODO [[~/Mega/Datasets][~/Mega/Datasets]]
**** go through, find whats useful
*** TODO [#A] NYT
**** try using title trie grammars
**** [[~/Mega/Images/glitch-assets][~/Mega/Images/glitch-assets]]
     possibly use these in vault?
**** [[~/Mega/bookmarks][~/Mega/bookmarks]]
     treat these as codings?
**** [[http://realitycommons.media.mit.edu/realitymining.html][Reality Mining]]
*** TODO [#B] Versu dataset
**** parse the code?
*** TODO horus heresy dataset
** TODO [#A] Annotations / Examples
*** TODO [#A] Snatch delegation
    to lead to delegation in iEl
*** TODO collate lists of sources
    to prepare for annotation,
    to give components of expressive generators
** -----------------------------------------------------------------------------
** Writing
*** TODO [[file:~/github/writing/orgfiles/dissertation.org::*Dissertation][Dissertation]]                                                           :dissertation:writing:important:
*** [[~/github/jgrey4296.github.io][jgrey4296.github.io]]                                                         :writing:important:todo:target:blog:web:
**** [[~/github/jsons][jsons representations]]                                                      :json:writing:
**** [[~/github/writing][misc writing]]                                                               :writing:generic:
*** TODO [#C] Mendeley organisation
**** [[/Volumes/DOCUMENTS/mendeley][Mendeley]]
*** TODO [[file:~/github/writing/orgfiles/taxonomies.org::*Taxonomies][Taxonomies]]
**** DONE TAG them
     CLOSED: [2019-03-08 Fri 11:13]
** TODO [#C] [[~/Mega/savedTwitter][Saved Twitter Threads]]
** -----------------------------------------------------------------------------
** Misc
*** [[~/github/jg_emacs_files][Emacs files]]                                    :lisp:setup:emacs:
*** [[~/github/jg_shell_files][Bash Scripts]]                                   :bash:setup:
*** Emacs / Spacemacs
**** TODO Org SubTree Transient State navigation
**** TODO [#C] Org Table Transient state
**** TODO [#C] org-agenda keymap modifications
     swap priority mods into < and >
**** TODO XML / Bookmarks load
**** TODO tag and colourize words minor mode to run anywhere
     be able to tag and colourize things dynamically, based on what you need at
     any given moment
     then be able to tag into groups?
**** TODO buffer groups / registers
     be able to add a buffer / marked buffers to a register,
     then search in them, or step through them
     persistent?
** TODO Run Summarize Directory Script on datasets/papers/other
   [[file:~/github/jg_shell_files/summariseDirectory.py::"""][<summariseDirectory.py>]]
** TODO Prototype some Mechanical Turk Tasks
** TODO [[http://bloom-lang.net/features/][bloom]]
** Structural phenomenology?
